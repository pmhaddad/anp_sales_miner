name: test and deploy
on:
  push

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      PIP_ROOT_USER_ACTION: ignore
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get install jq python3-distutils python3 curl -y
      - name: Install pip
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python3
      - name: Install pip dependencies
        run: pipenv verify && pipenv sync --dev
      - name: Run flake8
        run: pipenv run flake8
      - name: Move tests fixtures
        run: sudo mkdir -p /var/anp_sales_miner/tests; sudo mv -t /var/anp_sales_miner/tests tests/fixtures
      - name: Run tests
        run: pipenv run python -m pytest --cov=anp_sales_miner tests/ --cov-report term-missing
      - name: Create coverage badge
        run: bash .github/coverage_badge_creator.sh
      - name: Archive code coverage badge
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coverage_badge.svg
          retention-days: 1

  update-coverage-badge:
    # Inspired by https://hackernoon.com/adding-test-coverage-badge-on-github-without-using-third-party-services
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download code coverage badge
        uses: actions/download-artifact@v4
        with:
          name: coverage-badge
          path: badges
      - name: Deploy badge to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: badges
          token: ${{ secrets.GH_DEPLOY_BADGE_TOKEN }}
          branch: main
          repository-name: pmhaddad/pmhaddad.github.io
          target-folder: badges

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: pmhaddad/anp_sales_miner:latest
